name: Neon Database Branching

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:
  create-branch:
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    steps:
      - uses: actions/checkout@v4

      - name: Create Neon Branch
        id: create-branch
        uses: neondatabase/create-branch-action@v5
        with:
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          parent: main
          branch_name: preview/pr-${{ github.event.pull_request.number }}
          username: ${{ secrets.NEON_DATABASE_USERNAME }}
          api_key: ${{ secrets.NEON_API_KEY }}

      - name: Set Database URL for Preview
        run: |
          echo "DATABASE_URL=${{ steps.create-branch.outputs.db_url }}" >> $GITHUB_ENV

      - name: Run Migrations
        run: |
          npm run migrate -- --database-url="${{ steps.create-branch.outputs.db_url }}"
        continue-on-error: true

      - name: Update PR with Database Info
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const body = `
            ### üóÑÔ∏è Neon Database Branch Created

            **Branch Name:** \`preview/pr-${{ github.event.pull_request.number }}\`
            **Connection String:** Available in GitHub Secrets as \`PREVIEW_DATABASE_URL\`

            This isolated database branch contains a copy of your production data and schema.
            It will be automatically deleted when this PR is merged or closed.

            **Connect locally:**
            \`\`\`bash
            export DATABASE_URL="${{ steps.create-branch.outputs.db_url_with_pooler }}"
            npm run dev
            \`\`\`
            `;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });

      - name: Deploy Preview with Branch Database
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: 0bc21e3a5a9de1a4cc843be9c3e98121
          environment: preview
          secrets: |
            NEON_DATABASE_URL
        env:
          NEON_DATABASE_URL: ${{ steps.create-branch.outputs.db_url_with_pooler }}

  delete-branch:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    steps:
      - name: Delete Neon Branch
        uses: neondatabase/delete-branch-action@v3
        with:
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          branch: preview/pr-${{ github.event.pull_request.number }}
          api_key: ${{ secrets.NEON_API_KEY }}