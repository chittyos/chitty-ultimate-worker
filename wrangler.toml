name = "chitty-ultimate-worker"
main = "src/index.js"
compatibility_date = "2024-09-23"
account_id = "0bc21e3a5a9de1a4cc843be9c3e98121"

# KV Namespaces from chittyos-platform-live
[[kv_namespaces]]
binding = "KV_PLATFORM_STATE"
id = "NEEDS_NEW_KV_ID_1"

[[kv_namespaces]]
binding = "KV_PLATFORM_DATA"
id = "NEEDS_NEW_KV_ID_2"

# Durable Objects from chittyos-platform-live
[[durable_objects.bindings]]
name = "AI_GATEWAY_STATE"
class_name = "AIGatewayState"

[[durable_objects.bindings]]
name = "PLATFORM_STATE"
class_name = "ChittyOSPlatformState"

[[durable_objects.bindings]]
name = "SYNC_STATE"
class_name = "SyncState"

# Durable Objects migrations
[[migrations]]
tag = "v1"
new_classes = ["AIGatewayState", "ChittyOSPlatformState", "SyncState"]

# Workers AI Binding
[ai]
binding = "AI"

# D1 Database binding (alternative to KV for structured data)
# [[d1_databases]]
# binding = "DB"
# database_name = "chittyos-database"
# database_id = "NEEDS_D1_DATABASE_ID"

# AI Gateway binding for managing AI requests
# [ai_gateway]
# binding = "AI_GATEWAY"
# gateway_id = "NEEDS_GATEWAY_ID"

# Vectorize binding for vector database
# [[vectorize]]
# binding = "VECTORIZE"
# index_name = "chittyos-vectors"

# Workflows binding for durable execution
# [[workflows]]
# binding = "WORKFLOWS"
# class_name = "ChittyOSWorkflow"

# R2 bucket for storage
# [[r2_buckets]]
# binding = "STORAGE"
# bucket_name = "chittyos-storage"

# Queues for async processing
# [[queues.producers]]
# binding = "QUEUE"
# queue = "chittyos-queue"

# Workers for Platforms dispatch namespace
# [dispatch_namespaces]
# binding = "DISPATCH"
# namespace = "chittyos-tenants"

# Pipelines for data streaming
# [[pipelines]]
# binding = "PIPELINE"
# pipeline = "chittyos-events"

# Hyperdrive for Neon Postgres connection pooling
[[hyperdrive]]
binding = "HYPERDRIVE"
id = "NEEDS_HYPERDRIVE_ID"

# Alternative: Direct Neon connection (without Hyperdrive)
# [vars]
# NEON_DATABASE_URL = "postgresql://user:password@endpoint.neon.tech/database"

# Browser Rendering for dynamic content
# [browser]
# binding = "BROWSER"

# Email routing
# [send_email]
# binding = "EMAIL"

# Web3 gateway for blockchain
# [web3]
# binding = "WEB3"

# Routes for main domains (add more as needed)
# Using route patterns without zone_name since we'll configure in dashboard
# routes = [
#   "chitty.cc/*",
#   "chittycorp.com/*",
#   "*.chitty.cc/*"
# ]

[env.production]
name = "chitty-ultimate-worker-production"